<!DOCTYPE html>
<html lang="en">
<head>
    <title>Title</title>
    <!-- SITE TITTLE -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <style>
        body { padding-top: 60px; }
        .container-fluid { min-width: 100px; }
        .strong { font-weight: bold; }
        .clearfix { margin-bottom: 20px; }
    </style>
</head>
<body>

<div class="container-fluid">
    <div>
        <!--<a href="http://tools.ietf.org/id/draft-mraihi-totp-timebased-06.html">TOTP RFC Draft 알고리즘 참고</a>-->
        <div class="row">
            <form>
                <div class="clearfix">
                    <label class="strong" for="secret">Secret (base32)</label>
                    <div class="input"><input type="text" size="30" name="secret" id="secret" class="xlarge" value="JBSWY3DPEHPK3PXP" /></div>
                </div>

                <div class="clearfix">
                    <label class="strong">Secret (hex)</label>
                    <div class="input"><span class="label label-default" id="secretHex"></span>
                        <span id='secretHexLength'></span></div>
                </div>

                <div class="clearfix">
                    <label class="strong">QR Code</label>
                    <div class="input"><img id="qrImg" src="" /></div>
                </div>

                <div class="clearfix">
                    <label class="strong">Unix epoch div 30 (padded hex)</label>
                    <div class="input"><span class="label label-default" id='epoch'></span></div>
                </div>
                <!-- /clearfix -->
                <div class="clearfix">
                    <label class="strong">HMAC(secret, time)</label>
                    <div class="input" id='hmac'></div>
                </div>

                <div class="clearfix">
                    <label class="strong">One-time Password</label>
                    <div class="input"><span class="label label-primary" id='otp'></span></div>
                </div>

                <div class="clearfix">
                    <label class="strong">Updating in</label>
                    <div class="input"><span id='updatingIn'></span></div>
                </div>
            </form>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jsSHA/2.3.1/sha.js"></script>

    <script>

        function dec2hex(s) { return (s < 15.5 ? '0' : '') + Math.round(s).toString(16); }
        function hex2dec(s) { return parseInt(s, 16); }

        function base32tohex(base32) {
            var base32chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567";
            var bits = "";
            var hex = "";

            for (var i = 0; i < base32.length; i++) {
                var val = base32chars.indexOf(base32.charAt(i).toUpperCase());
                bits += leftpad(val.toString(2), 5, '0');
            }

            for (var i = 0; i+4 <= bits.length; i+=4) {
                var chunk = bits.substr(i, 4);
                hex = hex + parseInt(chunk, 2).toString(16) ;
            }
            return hex;

        }

        function leftpad(str, len, pad) {
            if (len + 1 >= str.length) {
                str = Array(len + 1 - str.length).join(pad) + str;
            }
            return str;
        }

        function updateOtp() {

            var key = base32tohex($('#secret').val());
            var epoch = Math.round(new Date().getTime() / 1000.0);
            var time = leftpad(dec2hex(Math.floor(epoch / 30)), 16, '0');

            // updated for jsSHA v2.0.0 - http://caligatio.github.io/jsSHA/
            var shaObj = new jsSHA("SHA-1", "HEX");
            shaObj.setHMACKey(key, "HEX");
            shaObj.update(time);
            var hmac = shaObj.getHMAC("HEX");

            $('#qrImg').attr('src', 'https://chart.googleapis.com/chart?chs=200x200&cht=qr&chl=200x200&chld=M|0&cht=qr&chl=otpauth://totp/user@host.com%3Fsecret%3D' + $('#secret').val());
            $('#secretHex').text(key);
            $('#secretHexLength').text((key.length * 4) + ' bits');
            $('#epoch').text(time);
            $('#hmac').empty();

            if (hmac == 'KEY MUST BE IN BYTE INCREMENTS') {
                $('#hmac').append($('<span/>').addClass('label important').append(hmac));
            } else {
                var offset = hex2dec(hmac.substring(hmac.length - 1));
                var part1 = hmac.substr(0, offset * 2);
                var part2 = hmac.substr(offset * 2, 8);
                var part3 = hmac.substr(offset * 2 + 8, hmac.length - offset);
                if (part1.length > 0 ) $('#hmac').append($('<span/>').addClass('label label-default').append(part1));
                $('#hmac').append($('<span/>').addClass('label label-primary').append(part2));
                if (part3.length > 0) $('#hmac').append($('<span/>').addClass('label label-default').append(part3));
            }

            var otp = (hex2dec(hmac.substr(offset * 2, 8)) & hex2dec('7fffffff')) + '';
            otp = (otp).substr(otp.length - 6, 6);

            $('#otp').text(otp);
        }

        function timer()
        {
            var epoch = Math.round(new Date().getTime() / 1000.0);
            var countDown = 30 - (epoch % 30);
            if (epoch % 30 == 0) updateOtp();
            $('#updatingIn').text(countDown);

        }

        $(function () {
            updateOtp();

            $('#update').click(function (event) {
                updateOtp();
                event.preventDefault();
            });

            $('#secret').keyup(function () {
                updateOtp();
            });

            setInterval(timer, 1000);
        });

    </script>

</body>
</html>